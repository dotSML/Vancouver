// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vancouver.Databases;

namespace Vancouver.Migrations
{
    [DbContext(typeof(VancouverDbContext))]
    [Migration("20181028123934_CreateIdentitySchema")]
    partial class CreateIdentitySchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vancouver.CustomerFolder.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Vancouver.Models.BankLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("BankLink");
                });

            modelBuilder.Entity("Vancouver.Models.CustomerTravelHistory", b =>
                {
                    b.Property<int>("CustomerTravelHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirportFrom");

                    b.Property<string>("AirportTo");

                    b.Property<DateTime>("ArrivalDateTime");

                    b.Property<string>("CustomerId");

                    b.Property<DateTime>("DepartureDateTime");

                    b.HasKey("CustomerTravelHistoryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AllCustomerTravelHistories");
                });

            modelBuilder.Entity("Vancouver.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BankLinkId");

                    b.Property<string>("CustomerId");

                    b.Property<string>("Payee");

                    b.Property<int?>("PaymentMethodId");

                    b.Property<string>("TicketId");

                    b.Property<string>("TotalPrice");

                    b.HasKey("PaymentID");

                    b.HasIndex("BankLinkId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("TicketId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Vancouver.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BankLinkId");

                    b.HasKey("PaymentMethodId");

                    b.HasIndex("BankLinkId");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("Vancouver.Models.Ticket", b =>
                {
                    b.Property<string>("TicketId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("arrivalAirportInbound");

                    b.Property<string>("arrivalAirportOutbound");

                    b.Property<string>("arrivalTimeInbound");

                    b.Property<string>("arrivalTimeOutbound");

                    b.Property<string>("departureTimeInbound");

                    b.Property<string>("departureTimeOutbound");

                    b.Property<string>("fareClass");

                    b.Property<string>("fareCurrency");

                    b.Property<string>("farePricePerPassenger");

                    b.Property<string>("farePriceTax");

                    b.Property<string>("farePriceTotal");

                    b.Property<string>("layoverCitiesInbound");

                    b.Property<string>("layoverCitiesOutbound");

                    b.Property<string>("layoverStopAmountInbound");

                    b.Property<string>("layoverStopAmountOutbound");

                    b.Property<string>("originAirportInbound");

                    b.Property<string>("originAirportOutbound");

                    b.Property<string>("tripDurationInbound");

                    b.Property<string>("tripDurationOutbound");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ticket");
                });

            modelBuilder.Entity("Vancouver.Models.Invoice", b =>
                {
                    b.HasBaseType("Vancouver.Models.Ticket");

                    b.Property<int>("InvoiceID");

                    b.Property<int?>("PaymentID");

                    b.HasIndex("PaymentID");

                    b.ToTable("Invoice");

                    b.HasDiscriminator().HasValue("Invoice");
                });

            modelBuilder.Entity("Vancouver.Models.CustomerTravelHistory", b =>
                {
                    b.HasOne("Vancouver.CustomerFolder.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("Vancouver.Models.Payment", b =>
                {
                    b.HasOne("Vancouver.Models.BankLink", "BankLink")
                        .WithMany()
                        .HasForeignKey("BankLinkId");

                    b.HasOne("Vancouver.CustomerFolder.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Vancouver.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("Vancouver.Models.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId");
                });

            modelBuilder.Entity("Vancouver.Models.PaymentMethod", b =>
                {
                    b.HasOne("Vancouver.Models.BankLink", "BankLink")
                        .WithMany()
                        .HasForeignKey("BankLinkId");
                });

            modelBuilder.Entity("Vancouver.Models.Invoice", b =>
                {
                    b.HasOne("Vancouver.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentID");
                });
#pragma warning restore 612, 618
        }
    }
}
